DROP TABLE friends;
DROP TABLE likes;
DROP TABLE films;
DROP TABLE users;

CREATE TABLE IF NOT EXISTS users
(
    "id"       integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name"     varchar(40)        NOT NULL,
    "login"    varchar(30) UNIQUE NOT NULL,
    "email"    varchar(30)        NOT NULL,
    "birthday" timestamp
);

CREATE TABLE IF NOT EXISTS films
(
    "id"          integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name"        varchar(30) NOT NULL,
    "description" varchar(100),
    "releaseDate" timestamp,
    "genre"       varchar(10) NOT NULL,
    "mpa"         varchar(10) NOT NULL,
    "duration"    integer     NOT NULL
);

CREATE TABLE IF NOT EXISTS likes
(
    "id"      integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "film_id" integer NOT NULL,
    "user_id" integer NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    "id"                integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "user_id"           integer UNIQUE NOT NULL,
    "friends_id"        integer NOT NULL,
    "confirmation"      boolean NOT NULL,
    "confirmation_date" timestamp
);



ALTER TABLE PUBLIC.likes ADD FOREIGN KEY ("film_id") REFERENCES PUBLIC.films ("id");

ALTER TABLE PUBLIC.likes ADD FOREIGN KEY ("user_id") REFERENCES PUBLIC.users ("id");

-- ALTER TABLE PUBLIC.users ADD FOREIGN KEY ("id") REFERENCES PUBLIC.friends ("user_id");
--
-- ALTER TABLE PUBLIC.friends ADD FOREIGN KEY ("friends_id") REFERENCES PUBLIC.users ("id");